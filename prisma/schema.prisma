datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  STUDENT
  MENTOR
}

model User {
  id       Int    @default(autoincrement()) @id
  name     String @unique
  email    String @unique
  password String
  role     Role
  posts    Post[]
}

model Post {
  id        Int       @default(autoincrement()) @id
  title     String
  content   String
  createdAt DateTime  @default(now())
  authorId  Int
  author    User      @relation(fields: [authorId], references: [id])
  comments  Comment[]
}

model Comment {
  id        Int       @default(autoincrement()) @id
  content   String
  createdAt DateTime  @default(now())
  authorId  Int
  author    User      @relation(fields: [authorId], references: [id])
  postId    Int?
  post      Post?     @relation(fields: [postId], references: [id])
  tags      String?
  parentId  Int?
  childs    Comment[] @relation("CommentToComment")
  commentId Int?
}

model Like {
  id     Int  @default(autoincrement()) @id
  userId Int
  user   User @relation(fields: [userId], references: [id])
  postId Int
  post   Post @relation(fields: [postId], references: [id])

  @@unique([userId, postId], name: "Like_userId_postId_unique_constraint")
}

model Notification {
  id      Int    @default(autoincrement()) @id
  content String
  whoId   Int
  who     User   @relation(fields: [whoId], references: [id])
}