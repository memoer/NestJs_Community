datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  STUDENT
  MENTOR
}

model User {
  id           Int            @id @default(autoincrement())
  name         String         @unique
  email        String         @unique
  password     String
  role         Role
  createdAt    DateTime       @default(now())
  posts        Post[]
  Comment      Comment[]
  Like         Like[]
  Notification Notification[]
}

model Post {
  id        Int       @id @default(autoincrement())
  title     String
  content   String
  createdAt DateTime  @default(now())
  authorId  Int
  author    User      @relation(fields: [authorId], references: [id])
  comments  Comment[]
  Like      Like[]
}

model Comment {
  id        Int       @id @default(autoincrement())
  content   String
  createdAt DateTime  @default(now())
  authorId  Int
  author    User      @relation(fields: [authorId], references: [id])
  postId    Int
  post      Post      @relation(fields: [postId], references: [id])
  tags      String?
  childs    Comment[] @relation("CommentToComment")
  commentId Int?
  Comment   Comment?  @relation("CommentToComment", fields: [commentId], references: [id])
}

model Like {
  id     Int  @id @default(autoincrement())
  userId Int
  user   User @relation(fields: [userId], references: [id])
  postId Int
  post   Post @relation(fields: [postId], references: [id])

  @@unique([userId, postId], name: "Like_userId_postId_unique_constraint")
}

model Notification {
  id        Int      @id @default(autoincrement())
  whoId     Int
  message   String
  checked   Boolean
  createdAt DateTime @default(now())
  who       User     @relation(fields: [whoId], references: [id])
}
