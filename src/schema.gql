# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type CommentModel {
  author: UserModelObjectType!
  authorId: ID!
  content: String!
  id: ID!
  post: PostModel!
  postId: ID!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type GetPostListOutputGql {
  count: Int!
  data: [PostModel!]!
  page: Int!
  take: Int!
}

type GetUserListOutputGql {
  count: Int!
  data: [UserModelObjectType!]!
  page: Int!
  take: Int!
}

type Mutation {
  createLike(postId: Int!): SuccessOutput!
  createPost(content: String!, title: String!): PostWithoutAuthorOutputGql!
  createUser(email: String!, name: String!, password: String!, role: UserRole!): UserModelObjectType!
  deleteLike(id: Int!): SuccessOutput!
  deletePost(id: Int!): SuccessOutput!
  deleteUser: SuccessOutput!
  updatePost(content: String, id: Int, title: String): PostWithoutAuthorOutputGql!
  updateUser(email: String, name: String, password: String, role: UserRole): UserModelObjectType!
}

type PostModel {
  author: UserModelObjectType!
  authorId: Int!
  comments: [CommentModel]
  content: String!
  createdAt: DateTime!
  id: Int!
  title: String!
}

type PostWithoutAuthorOutputGql {
  authorId: Int!
  comments: [CommentModel]
  content: String!
  createdAt: DateTime!
  id: Int!
  title: String!
}

type Query {
  getMe(include: Boolean = false): UserModelObjectType!
  getMyPost(include: Boolean = false, page: Int = 1, take: Int = 10): GetPostListOutputGql!
  getPostList(include: Boolean = false, page: Int = 1, take: Int = 10): GetPostListOutputGql!
  getPostOne(id: Int!, include: Boolean = false): PostModel!
  getUserList(page: Int = 1, take: Int = 10): GetUserListOutputGql!
  getUserOne(id: Int!, include: Boolean = false): UserModelObjectType!
  login(email: String!, password: String!): String!
}

type SuccessOutput {
  ok: Boolean!
}

type UserModelObjectType {
  email: String!
  id: Int!
  name: String!
  password: String!
  posts: [PostModel]
  role: UserRole!
}

enum UserRole {
  MENTOR
  STUDENT
}
